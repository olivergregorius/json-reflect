plugins {
    id "org.springframework.boot" version "2.6.3"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"

    id "jacoco"
    id "org.sonarqube" version "3.3"
}

sourceCompatibility = JavaVersion.VERSION_17
group = "dev.gregorius.library"
version = "0.0.1-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.22"
    annotationProcessor "org.projectlombok:lombok:1.18.22"

    // JSON
    implementation "org.json:json:20210307"

    // Hamcrest
    implementation "org.hamcrest:hamcrest:2.2"

    // Util
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "com.google.code.gson:gson:2.8.9"
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

def testCoverageExludes = []

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    jacoco {
        excludes += testCoverageExludes
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
        xml.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(
            fileTree(dir: "build/classes/java/main", excludes: testCoverageExludes)
        )
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "olivergregorius_json-reflect"
        property "sonar.organization", "olivergregorius"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.coverage.exclusions", testCoverageExludes.join(",")
    }
}
